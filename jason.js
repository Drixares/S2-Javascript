"use strict";

/*
* 1 tueur "Jason" avec 50pv. Quand il attaque :
    - soit le survivant meurt                     ‚úÖ
    - soit le survivant esquive et inflige 10dmg  ‚úÖ
    - soit le survivant inflige 15dmg mais meurt  ‚úÖ
|    
* Les morts sont affich√©es √† la fin. ‚úÖ
|
* Caract√©ristiques de spersonnages et noms | proba de mourir, proba de dmg 
et de mourir en mettant des d√©g√¢ts ‚úÖ
|
* 5 survivants avec nom g√©n√©r√© al√©atoirement d'un tableau de pr√©noms ‚úÖ
|
* Message attendu pour chaque action (Jason a tu√© X, X a esquiv√© et a inflig√© X dmg,
Jason est mort, les survivants ont gagn√© mais RIP √† X, X, X...) ‚úÖ
|
*/

// Initialisation des variables caract√©ristiques, pr√©noms, stats et de Jason.
let caract√©ristiques = ["nerd", "sportif", "otaku", "geek", "chinois"];                             // Tableau des caract√©ristiques
let prenoms = ["Matt√©o", "Adrien", "Gaspard", "Martin", "Dorian"];                                  // Tableau des pr√©noms
let stats = [[0.2, 0.6, 0.2], [0.5, 0.3, 0.2], [0.3, 0.3, 0.4], [0.6, 0.2, 0.2], [0.2, 0.5, 0.3]];  // Tableau de tableau des stats de probabilit√©.
let survivants = [];                                                                                   // Tableau o√π sera ajout√© les objets Personnage.
let survivantsMorts = [];                                                                           // Tableau des personnes mortes. (Hors Jason)
let tueur = ["Jason", 50];                                                                          // Variable qu d√©finit Jason


// Cr√©ation d'une classe Personnage pour cr√©er les survivants.
class Personnage {

    constructor(nom, caract√©ristique, probaDead, probaDmg, probaDmgDead) {
        this.nom = nom;
        this.caract√©ristique = caract√©ristique;
        this.probaDead = probaDead;
        this.probaDmg = probaDmg;
        this.probaDmgDead = probaDmgDead;

    }
}


// Fonction combat() qui v√©rifie si le combat doit continuer ou non.
function combat() {
    let affichageMort = "";

    // Si il reste des survivants en vie et que Jason a toujours des PV. 
    if (survivants.length >= 1 && tueur[1] > 0) {
        let indiceSurvivantAleatoire = Math.floor(Math.random() * survivants.length);  // Chiffre al√©atoire entre [0, 5[
        let survivantCible = survivants[indiceSurvivantAleatoire]                      // Survivant positionn√© √† l'indice indiceSurvivantAleatoire dans le tableau survivants

        // Appel de la fonction attaqueTueur avec comme param√®tres le survivant et son indice.
        attaqueTueur(survivantCible, indiceSurvivantAleatoire)
        
    // Sinon si il reste des survivants mais que Jason est mort
    } else if (survivants.length >= 1 && tueur[1] <= 0) {

        // Boucle d'affichage qui permet de concat√©ner "et", " " ou ", " en fonction du positionnement du survivant dans survivantsMort.
        // (Permet d'avoir un meilleur affichage de fin)
        for (let i = 0; i < survivantsMorts.length; i++) {
            let test = survivantsMorts[i]; 

            if (survivantsMorts.length > 1) {
                if (test == survivantsMorts[survivantsMorts.length - 1]) {
                    affichageMort += `et ${test}.`;                                                  // affichageMort += "et " + test + "."
                    
                } else if (test == survivantsMorts[survivantsMorts.length - 2]) {
                    affichageMort += `${test} `                                                      // affichage = affichage + test + " "
                } else {
                    affichageMort += `${test}, `;
                }
            } 
            else {
                affichageMort += `${test}`
            }
        }

        // V√©rifie si il y a eu des morts parmi les survivants et affiche le bon message en cons√©quence.
        if (survivantsMorts.length == 0) {
        console.log("Jason est mort ! Aucune victime n'est √† d√©plorer chez les survivants !")
        } else {
            console.log("Jason est mort ! Mais RIP √†", affichageMort + " ü™¶")
        }

    // Sinon si les survivants sont morts et que le tueur a encore des PV.
    } else if (survivants.length == 0 && tueur[1] > 0) {
        console.log("Jason a gagn√©, il ne reste plus aucun survivant.");

    // Sinon si les survivants et le tueur sont morts.
    } else if (survivants.length == 0 && tueur[1] <= 0) {
        console.log("Tout le monde est mort...", affichageMort + " üíÄ");
    }
}


// Fonction attaqueTueur(p1, p2) qui r√©alise 1 √©v√®nement parmi les 3 conditions en focntion des probabilit√©s et d'un chiffre al√©atoire.
function attaqueTueur(survivantCible, indiceSurvivantAleatoire) {
    let valeurAleatoire = Math.random();  // Chiffre al√©atoire entre 0 et 1

    // Si x est inf√©rieur √† la probaDead, le survivant meurt.
    if (valeurAleatoire < survivantCible["probaDead"]) { 
        console.log("Jason a tu√©", survivantCible["nom"]);
        survivantsMorts.push(survivantCible["nom"]);
        survivants.splice(indiceSurvivantAleatoire, 1);

    // Si x est inf√©rieur √† (probaDead + probaDmg), le survivante esquive et met 10 d√©g√¢ts √† Jason.
      } else if (valeurAleatoire < survivantCible["probaDead"] + survivantCible["probaDmg"]) {
        console.log(survivantCible["nom"],"esquive et met 10 d√©g√¢ts √† Jason !");
        tueur[1] -= 10;

    // Sinon le survivant se sacrifie en mettant 15 d√©g√¢ts √† Jason.
      } else  { 
        console.log(survivantCible["nom"] ,"se sacrifie et met 15 d√©g√¢ts √† Jason !");
        tueur[1] -= 15;
        survivantsMorts.push(survivantCible["nom"]);
        survivants.splice(indiceSurvivantAleatoire, 1);
      }


    // console.log("Survivants morts :", survivantsMorts);

    combat()

};



// Fonction start() qui se lance au click du bouton. 
function start() {
    let btn = document.getElementById('btn');
    btn.innerHTML = "Regardez la console"

    // Pour chaque nom dans le tableau prenoms, une caract√©ristique et des stats vont √™tre mis chacune dans une variable.
    prenoms.forEach(nom => { 
    let i = Math.floor(Math.random() * caract√©ristiques.length); // Nombre al√©atoire entre 0 et 4    [0, 5[
    let caract√©ristique = caract√©ristiques.splice(i, 1);         // Prend UN √©l√©ment du tableau caract√©ristiques A PARTIR de l'index i en le retirant du tableau.

    let j = Math.floor(Math.random() * stats.length);            // Nombre al√©atoire entre 0 et 4    [0, 5[
    let statPerso = stats.splice(j, 1);                          // Prend UN √©l√©ment du tableau stats A PARTIR de l'index j en le retirant du tableau.

    // Un object de la class Personnage est cr√©√© puis ajout√© au tableau survivants.
    let joueur = new Personnage(nom, caract√©ristique, statPerso[0][0], statPerso[0][1], statPerso[0][2]);
    survivants.push(joueur)
    });

    combat()

    console.log("---- Recharger la page et clicker sur le bouton pour relancer une course ----");
}


/*<========================= TEST D'AFFICHAGE =======================================================>*/

// console.log(survivants);
// console.log(Math.random())
// console.log(survivants[0]["probaDmg"])


